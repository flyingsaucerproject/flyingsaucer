# Configuration file for XHTMLRenderer core
#
# Follows formatting specified in JavaDoc for java.util.Properties
#   key = value
#
# If you define a key in this file, the later one will be used
# Comments are ignored, start the line with a # sign. 
# Feel free to comment liberally
#
# Naming convention: prefix all keys with
# xr.
# e.g. xr.render-speed = SUPER_FAST

# CSS / CASCADE
#
# Location of user-agent "default" CSS for renderer
xr.css.user-agent-default-css = /resources/css/

# TESTS
#
# Location of hamlet (large XHTML file)
xr.test.files.hamlet = /demos/browser/xhtml/hamlet.xhtml

# Format for logging when XRSimpleLogFormatter is used as the log output
# formatter. The format string for this key follows
# java.text.MessageFormat. The following replaceable parameters are 
# substituted into the output message string; you can use one, all--at a
# minimum, you probably want the log record message. A newline is 
# automatically added at the end of each message.
#
#    {0}  String.valueOf(record.getMillis()),
#    {1}  record.getLoggerName(),
#    {2}  record.getLevel().toString(),
#    {3}  record.getSourceClassName(),
#    {4}  record.getSourceMethodName(),
#    {5}  record.getMessage()
#    {6}  record.getThrown().getName()
#    {7}  record.getThrown().getMessage()
#    {8}  record.getThrown() stack trace
#
# Two formats, for with and without exception
xr.simple-log-format = {1} {2}:: {5}
xr.simple-log-format-throwable = {1} {2}:: {5}


# Values used for testing Configuration, do not modify
xr.test-config-byte = 8
xr.test-config-short = 16
xr.test-config-int = 100
xr.test-config-long = 2000
xr.test-config-float = 3000.25F
xr.test-config-double = 4000.50D
xr.test-config-boolean = true


# XR logging behavior. Follows conventions in 
# java.util.logging.LogManager. See there for details.
#
# The prefix for all entries here should be
#  xr.util-logging.

#
# ENABLE OR DISABLE ALL LOGGING
#   set to false to turn all Flying Saucer logging off, regardless of
#   other settings; corresponds to static method XRLog.setLoggingEnabled(bool);
#
xr.util-logging.loggingEnabled=false

# Handlers
# See JDK documentation for the Logging API; this is a space-separated list of class names that extend the
# java.util.logging.Handler class. Each class named here will be instantiated and assigned to the each FS
# logger (not the root logger, as the JDK log-properties load mechanism would do it). 
xr.util-logging.handlers=java.util.logging.ConsoleHandler

# Whether our loggers should send their log messages to their parent's handlers as well
# In our case, we don't want this, because our log messages will be sent to the handlers
# of the root logger, which will log the message as well
xr.util-logging.use-parent-handler=false

# Log level--you can assign a log level to the handler which processes log messages.
# By default, we assign a level to the console handler we attach to our loggers.
# See the JDK Logging API documentation.
#
# The default logging level for new ConsoleHandler instances
xr.util-logging.java.util.logging.ConsoleHandler.level=INFO

# Log formatter--you can assign a class to format the output of log messages.
# Each instance is assigned to a log Handler *which must be one of those listed in the handlers property
# above.
#
# The default formatter for new ConsoleHandler instances.
# Default for the JDK, uncomment to use.
# java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
# XR log formatter
xr.util-logging.java.util.logging.ConsoleHandler.formatter=org.xhtmlrenderer.util.XRSimpleLogFormatter

# Log levels
#    NOTE: the name of this property is .level in the logging spec, hence the two ..
xr.util-logging.org.xhtmlrenderer.level = ALL
xr.util-logging.org.xhtmlrenderer.config.level = ALL
xr.util-logging.org.xhtmlrenderer.exception.level = ALL
xr.util-logging.org.xhtmlrenderer.general.level = ALL
xr.util-logging.org.xhtmlrenderer.init.level = ALL
xr.util-logging.org.xhtmlrenderer.load.level = ALL
xr.util-logging.org.xhtmlrenderer.load.xml-entities.level = ALL
xr.util-logging.org.xhtmlrenderer.match.level = ALL
xr.util-logging.org.xhtmlrenderer.cascade.level = ALL
xr.util-logging.org.xhtmlrenderer.css-parse.level = ALL
xr.util-logging.org.xhtmlrenderer.layout.level = ALL
xr.util-logging.org.xhtmlrenderer.render.level = ALL


# resource loading
#   full classname for the SAX parser to use; should be an implementation
#   of org.xml.sax.XMLReader
#   leave blank or "default" to use JDK default parser
#
#   piccolo: com.bluecast.xml.Piccolo
#   tagsoup: org.ccil.cowan.tagsoup.Parser
xr.load.xml-reader=default

#   : parser features
#
#   not all features are supported by all parsers. if the feature is not supported
#   , but you request it, the parser will throw an exception and FS will just log that
#   and keep going. check logs to see if you need to turn these features off. you can 
#   skip all features by setting configure-features to false

#   whether features should be set at all
xr.load.configure-features=false

#   whether pages should be validated against DTD or schema
#   ! careful: this will be very picky; pages will be rejected
#   NOTE! Piccolo will throw an error if validation is on--not supported
xr.load.validation=false

#   whether parser should try to use string.intern
#   this is experimental, currently only for developers
#   NOTE!: Piccolo will throw an error if interning is set to true--strings auto-intern'd
xr.load.string-interning=false

#   namespace support works such that one of the two features must be true, and the other false
#
#   whether parser should pass namespace info in during parsing
#   this is experimental, currently only for developers
xr.load.namespaces=false

#   whether parser should pass namespace attributes declaration attributes during parsing
#   this is experimental, currently only for developers
xr.load.namespace-prefixes=false

# layout controls
xr.layout.whitespace.experimental = true
xr.layout.bad-sizing-hack = false

# rendering controls
xr.renderer.viewport-repaint=true
xr.renderer.draw.backgrounds = true
xr.renderer.draw.borders = true
xr.renderer.debug.box-outlines = false

# text rendering controls using Java2D renderer (default when rendering to Swing panels)
#    scaling factor for rendering text; 1.25 would be "25% larger than default"
xr.text.scale=1.0

#    at what font-size should AA kick in. for older JVMs AA is very expensive and slow--set this to
#    a high value (like 25); for JDK 6, smoke tests show that AA is basically low-cost for Flying Saucer
#    we set it to a high value for the benefit of users still on JDK 1.4
xr.text.aa-fontsize-threshhold=25

#    when using Java2D for rendering, hint to renderer for AA algorithm to use
xr.text.aa-rendering-hint=RenderingHints.VALUE_TEXT_ANTIALIAS_HGRB

#When using Java2D for rendering, hint to render with fractional font metrics.
# default is false. valid values: true|false
#xr.text.fractional-font-metrics=false

# whether or not to cache stylesheets
# note that there is currently no way to remove
# stylesheets from the cache
xr.cache.stylesheets=false

### a bunch of properties used to turn on and off the incremental
###layout features
xr.incremental.enabled=false

# use lazy asynchronous image resources instead of normal synchronous ones
xr.incremental.lazyimage = false

# adds a per block delay of N milleseconds
xr.incremental.debug.layoutdelay=0

# prints how long each repaint takes
xr.incremental.repaint.print-timing=false

# whether or not the threads be used
# if false, xr.incremental.enabled is also
# implicitly false
xr.use.threads=false

# whether or not link and hover listeners will be used.
xr.use.listeners=true

# if BufferedImage should be use
# Note: On VMs and platforms with the most up-to-date acceleration techniques,
#       BufferedImage performs better, but there were serious performance
#       regressions due to differences in when/if images are accelerated or
#       not by the VM. In particular, we observed some serious regressions on
#       Windows even on simple pages like our splash screen. See
#       https://xhtmlrenderer.dev.java.net/servlets/ReadMsg?list=dev&msgNo=3307
# defaults to false
xr.image.buffered=false

# image loading
# on loading images that need to be scaled
#    on scaling, whether to use LOW, MID or HIGH-quality process. defaults to HIGH
xr.image.scale=LOW

# When rendering text, not all fonts support all character glyphs. When set to true, this
# will replace any missing characters with the specified character to aid in the debugging
# of your PDF.  Currently only supported for PDF rendering.
xr.renderer.replace-missing-characters=false
xr.renderer.missing-character-replacement=#

#    on scaling, what rendering hints to use; must be one of the rendering hints that corresponds to
#    RenderingHints.KEY_INTERPOLATION (e.g. RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR
#    VALUE_INTERPOLATION_BILINEAR or VALUE_INTERPOLATION_BICUBIC. Defaults to NEAREST_NEIGHBOR
xr.image.render-quality=java.awt.RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR

# async image loading properties
xr.image.background.workers=5
xr.image.background.greedy=true

# CVS auto-expanded keywords
# $Id$
#
# $Log$
# Revision 1.50  2009/05/15 16:28:13  pdoubleya
# Integrate async image loading, starting point is DelegatingUserAgentCallback. AWT images are now always buffered, but screen-compatible. RootPanel now supports a repaint mechanism, with optional layout, with some attempt to control how often one or the other actually takes place when many images have been loaded.
#
# Revision 1.49  2009/03/22 15:13:23  pdoubleya
# Follow up for removing Minium AA: font "smoothing level" now deprecated. Changed to use font smoothing threshold alone. Remove corresponding property from configuration file.
#
# Revision 1.48  2009/03/22 12:27:37  pdoubleya
# Remove Minium anti-aliasing library as sources are not available. Removed jar and all references to it. For R8 release.
#
# Revision 1.47  2008/01/27 16:40:29  pdoubleya
# Issues 186 and 130: fix configuration so that logging setup does not override any current settings for JDK logging classes. Disable logging by default.
#
# Revision 1.46  2007/11/23 07:03:30  pdoubleya
# Applied patch from N. Barozzi to allow either toolkit or buffered images to be used, see https://xhtmlrenderer.dev.java.net/servlets/ReadMsg?list=dev&msgNo=3847
#
# Revision 1.45  2007/06/20 12:09:07  pdoubleya
# re-added missing text AA properties
#
# Revision 1.44  2007/05/23 16:50:17  peterbrant
# Remove obsolete comment
#
# Revision 1.42  2007/04/10 21:40:28  pdoubleya
# Support for varied scaling routines for images; fix image caching-bug; add some way to handle missing images.
#
# Revision 1.41  2007/04/07 15:22:47  pdoubleya
# New image scaling properties
#
# Revision 1.40  2006/08/03 14:11:03  pdoubleya
# Comments
#
# Revision 1.39  2006/07/17 22:15:58  pdoubleya
# Added loggingEnabled switch to XRLog and config file; default logging to off there and in Configuration. Fix for Issue Tracker #123.
#
# Revision 1.38  2006/02/22 02:20:18  peterbrant
# Links and hover work again
#
# Revision 1.37  2005/11/11 01:37:12  peterbrant
# Turn threads back on (xr.use.threads=false committed by mistake)
#
# Revision 1.36  2005/11/11 01:32:50  peterbrant
# Add option to turn off stylesheet caching
#
# Revision 1.35  2005/11/05 18:43:49  peterbrant
# Disable incremental rendering for now
#
# Revision 1.34  2005/10/23 22:16:41  tobega
# Preparation for StackingContext rendering
#
# Revision 1.33  2005/10/20 22:51:38  peterbrant
# Add non-threaded rendering mode
#
# Revision 1.32  2005/10/16 23:57:14  tobega
# Starting experiment with flat representation of render tree
#
# Revision 1.31  2005/10/02 21:29:57  tobega
# Fixed a lot of concurrency (and other) issues from incremental rendering. Also some house-cleaning.
#
# Revision 1.30  2005/09/29 21:34:01  joshy
# minor updates to a lot of files. pulling in more incremental rendering code.
# fixed another resize bug
# Issue number:
# Obtained from:
# Submitted by:
# Reviewed by:
#
# Revision 1.29  2005/09/28 00:03:29  joshy
# removed cruft from BasicPanel
# turned of incremental layout and lazy images by default
# Issue number:
# Obtained from:
# Submitted by:
# Reviewed by:
#
# Revision 1.28  2005/09/27 23:48:38  joshy
# first merge of basicpanel reworking and incremental layout. more to come.
# Issue number:
# Obtained from:
# Submitted by:
# Reviewed by:
#
# Revision 1.27  2005/07/15 23:39:49  joshy
# updates to try to fix the resize issue
#
# Revision 1.26  2005/06/26 15:48:09  tobega
# Converted to almost standard html4 default css, which shook out a bug: position should not inherit
#
# Revision 1.25  2005/06/16 18:34:09  joshy
# support for clear:right
# Issue number:
# Obtained from:
# Submitted by:
# Reviewed by:
#
# Revision 1.24  2005/06/15 17:54:13  pdoubleya
# Default to not configure parser features.
#
# Revision 1.23  2005/04/20 19:13:16  tobega
# Fixed vertical align. Middle works and all look pretty much like in firefox
#
# Revision 1.22  2005/04/07 16:36:04  pdoubleya
# Added level for config.
#
# Revision 1.21  2005/03/27 18:37:50  pdoubleya
# Added logging control for entity resolution.
#
# Revision 1.20  2005/02/05 17:18:56  pdoubleya
# Added properties for SAX parsing.
#
# Revision 1.19  2005/02/03 23:13:41  pdoubleya
# oops, reset parser to default.
#
# Revision 1.18  2005/02/03 23:13:10  pdoubleya
# added support for parser selection.
#
# Revision 1.17  2005/01/29 12:41:38  pdoubleya
# Added css-parse log entry.
#
# Revision 1.16  2004/12/13 15:15:56  joshy
# fixed bug where inlines would pick up parent styles when they aren't supposed to
# fixed extra Xx's in printed text
# added conf boolean to turn on box outlines
#
# Issue number:
# Obtained from:
# Submitted by:
# Reviewed by:
#
# Revision 1.15  2004/12/01 01:57:00  joshy
# more updates for float support.
#
# Issue number:
# Obtained from:
# Submitted by:
# Reviewed by:
#
# Revision 1.14  2004/11/30 21:23:18  joshy
# updated the unit tests
#
# Issue number:
# Obtained from:
# Submitted by:
# Reviewed by:
#
# Revision 1.13  2004/11/23 15:30:30  joshy
# turned on new whitespace handler
#
#
# Issue number:
# Obtained from:
# Submitted by:
# Reviewed by:
#
# Revision 1.12  2004/11/22 21:34:03  joshy
# created new whitespace handler.
# new whitespace routines only work if you set a special property. it's
# off by default.
#
# turned off fractional font metrics
#
# fixed some bugs in u and x
#
# - j
#
# Issue number:
# Obtained from:
# Submitted by:
# Reviewed by:
#
# Revision 1.11  2004/11/16 15:38:42  joshy
# removed background printing which speeds it up considerably
# added boolean in conf to turn off backgrounds for testing
#
# Issue number:
# Obtained from:
# Submitted by:
# Reviewed by:
#
# Revision 1.10  2004/11/15 14:39:33  joshy
# changed default for viewport rendering to true
# Issue number:
# Obtained from:
# Submitted by:
# Reviewed by:
#
# Revision 1.9  2004/11/10 17:28:54  joshy
# initial support for anti-aliased text w/ minium
#
# Issue number:
# Obtained from:
# Submitted by:
# Reviewed by:
#
# Revision 1.8  2004/10/27 14:03:37  joshy
# added initial viewport repainting support
#
# Issue number:
# Obtained from:
# Submitted by:
# Reviewed by:
#
# Revision 1.7  2004/10/18 17:10:58  pdoubleya
# Added entry for hamlet demo file location.
#
# Revision 1.6  2004/10/18 12:31:39  pdoubleya
# Added logging properties, and removed some unused old logging config at the top.
#
# Revision 1.5  2004/10/14 15:43:56  pdoubleya
# Added location of default.css.
#
# Revision 1.4  2004/10/14 15:05:37  pdoubleya
# Added testing properties for Configuration.
#
# Revision 1.3  2004/10/14 12:54:11  pdoubleya
# Additional message parameters for logging message format.
#
# Revision 1.2  2004/10/14 11:09:29  pdoubleya
# Added logging properties and comments.
#
# Revision 1.1  2004/10/13 23:01:09  pdoubleya
# Added to CVS.
#
